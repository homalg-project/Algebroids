# SPDX-License-Identifier: GPL-2.0-or-later
# Algebroids: Algebroids and bialgebroids as preadditive categories generated by enhanced quivers
#
# Declarations
#

#! @Chapter Category of finitely presented matrix algebras

####################################
##
#! @Section GAP categories
##
####################################

## categories

#!
DeclareCategory( "IsCategoryOfFinitelyPresentedMatrixAlgebras", IsCapCategory );

#!
DeclareCategory( "IsObjectInCategoryOfFpMatrixAlgebras", IsCapCategoryObject );

#!
DeclareCategory( "IsMorphismInCategoryOfFpMatrixAlgebras", IsCapCategoryMorphism );

####################################
##
#! @Section Attributes
##
####################################

#!
DeclareAttribute( "UnderlyingCategoryOfFpAlgebras", IsCategoryOfFinitelyPresentedMatrixAlgebras );

CapJitAddTypeSignature( "UnderlyingCategoryOfFpAlgebras", [ IsCategoryOfFinitelyPresentedMatrixAlgebras ],
  function ( input_types )
    
    return CapJitDataTypeOfCategory( UnderlyingCategoryOfFpAlgebras( input_types[1].category ) );
    
end );

#!
DeclareAttribute( "UnderlyingCategoryOfMatrices", IsCategoryOfFinitelyPresentedMatrixAlgebras );

CapJitAddTypeSignature( "UnderlyingCategoryOfMatrices", [ IsCategoryOfFinitelyPresentedMatrixAlgebras ],
  function ( input_types )
    
    return CapJitDataTypeOfCategory( UnderlyingCategoryOfMatrices( input_types[1].category ) );
    
end );

#!
DeclareAttribute( "CoefficientsRing", IsCategoryOfFinitelyPresentedMatrixAlgebras );

CapJitAddTypeSignature( "CoefficientsRing", [ IsCategoryOfFinitelyPresentedMatrixAlgebras ],
  function ( input_types )
    
    return CapJitDataTypeOfRing( CoefficientsRing( input_types[1].category ) );
    
end );

#!
DeclareAttribute( "CoefficientsRing", IsObjectInCategoryOfFpMatrixAlgebras );

CapJitAddTypeSignature( "CoefficientsRing", [ IsObjectInCategoryOfFpMatrixAlgebras ],
  function ( input_types )
    
    return CapJitDataTypeOfRing( CoefficientsRing( CapCategory( input_types[1].category ) ) );
    
end );

#!
DeclareAttribute( "DefiningPairOfFinitelyPresentedMatrixAlgebra",
        IsObjectInCategoryOfFpMatrixAlgebras );

#!
DeclareAttribute( "UnderlyingMorphismInCategoryOfFpAlgebras",
        IsMorphismInCategoryOfFpMatrixAlgebras );

#!
DeclareOperation( "NrGenerators",
        [ IsObjectInCategoryOfFpMatrixAlgebras ] );

#!
DeclareAttribute( "Generators",
        IsObjectInCategoryOfFpMatrixAlgebras );

#!
DeclareAttribute( "MatrixGenerators",
        IsObjectInCategoryOfFpMatrixAlgebras );

#!
DeclareAttribute( "AssociatedLinearClosureOfPathCategory",
        IsObjectInCategoryOfFpMatrixAlgebras );

#!
DeclareAttribute( "DefiningRelations",
        IsObjectInCategoryOfFpMatrixAlgebras );

#!
DeclareAttribute( "AssociatedQuotientCategoryOfLinearClosureOfPathCategory",
        IsObjectInCategoryOfFpMatrixAlgebras );

#!
DeclareAttribute( "Dimension",
        IsObjectInCategoryOfFpMatrixAlgebras );

#!
DeclareAttribute( "GroebnerBasisOfDefiningRelations",
        IsObjectInCategoryOfFpMatrixAlgebras );

#!
DeclareAttribute( "AmbientAlgebra",
        IsObjectInCategoryOfFpMatrixAlgebras );

#!
DeclareAttribute( "AssociatedFunctorOfLinearClosuresOfPathCategoriesData",
        IsMorphismInCategoryOfFpMatrixAlgebras );

####################################
##
#! @Section Operations
##
####################################

#!
DeclareOperation( "Counit",
        [ IsObjectInCategoryOfFpMatrixAlgebras, IsList ] );

#!
DeclareOperation( "Comultiplication",
        [ IsObjectInCategoryOfFpMatrixAlgebras, IsList ] );

####################################
##
#! @Section Constructors
##
####################################

#!
DeclareOperation( "CategoryOfFpMatrixAlgebras",
        [ IsCategoryOfFinitelyPresentedAlgebras, IsCapCategory ] );
#! @InsertChunk CategoryOfFpMatrixAlgebras

#!
DeclareAttribute( "CategoryOfFpMatrixAlgebras",
        IsHomalgRing );

CapJitAddTypeSignature( "CategoryOfFpMatrixAlgebras", [ IsCategoryOfFinitelyPresentedAlgebras ], function ( input_types )
    
    return CapJitDataTypeOfCategory( CategoryOfFpMatrixAlgebras( input_types[1].category ) );
    
end );
