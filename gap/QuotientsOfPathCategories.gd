# SPDX-License-Identifier: GPL-2.0-or-later
# Algebroids: Algebroids and bialgebroids as preadditive categories generated by enhanced quivers
#
# Declarations
#

#! @Chapter Path Categories

####################################
#
#! @Section Quotients of path categories
#
####################################

#! @Description
#!  The &GAP; category of quotients of path categories.
DeclareCategory( "IsQuotientOfPathCategory",
        IsQuotientCapCategory );

#! @Description
#!  The &GAP; category of objects in quotients path categories.
DeclareCategory( "IsQuotientOfPathCategoryObject",
        IsQuotientCapCategoryObject );

#! @Description
#!  The &GAP; category of morphisms in quotients of path categories.
DeclareCategory( "IsQuotientOfPathCategoryMorphism",
        IsQuotientCapCategoryMorphism );

if false then
#! @Description
#!  Returns the quotient category of <A>C</A> by the two-sided ideal of morphisms generated by <A>rels</A>.
#! @Arguments C, rels
#! @Returns a &CAP; category
DeclareOperation( "QuotientCategory", [ IsPathCategory, IsDenseList ] );
fi;

#! @Description
#!  Returns the generators of the underlying two-sided ideal of morphisms.
#! @Arguments qC
#! @Returns a dense list
DeclareAttribute( "DefiningRelations", IsQuotientOfPathCategory );

#! @Description
#!  Returns the reduced Groebner basis of the underlying two-sided ideal of morphisms.
#! @Arguments qC
#! @Returns a dense list
DeclareAttribute( "GroebnerBasisOfDefiningRelations", IsQuotientOfPathCategory );

#! @Description
#!  Returns the index of the object.
#! @Arguments obj
#! @Returns an integer
DeclareAttribute( "ObjectIndex", IsQuotientOfPathCategoryObject );

#! @Description
#!  The input is a morphism <A>alpha</A> in the quotient category <A>qC</A> of a path category <C>C</C>.
#!  The output is a canonical representative of <A>alpha</A> in <C>C</C>. Equal morphisms in <A>qC</A> have the same
#!  canonical representative.
#! @Arguments alpha
#! @Returns a &CAP; morphism
DeclareAttribute( "CanonicalRepresentative", IsQuotientOfPathCategoryMorphism );

#! @InsertChunk PathCategories

