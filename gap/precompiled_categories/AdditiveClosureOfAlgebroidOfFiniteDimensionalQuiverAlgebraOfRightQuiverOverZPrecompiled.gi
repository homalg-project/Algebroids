# SPDX-License-Identifier: GPL-2.0-or-later
# Algebroids: Algebroids and bialgebroids as preadditive categories generated by enhanced quivers
#
# Implementations
#
BindGlobal( "ADD_FUNCTIONS_FOR_AdditiveClosureOfAlgebroidOfFiniteDimensionalQuiverAlgebraOfRightQuiverOverZPrecompiled", function ( cat )
    
    ##
    AddAdditionForMorphisms( cat,
        
########
function ( cat_1, alpha_1, beta_1 )
    local hoisted_3_1, hoisted_4_1, hoisted_5_1, hoisted_6_1, hoisted_7_1, hoisted_8_1, deduped_9_1, deduped_10_1, deduped_11_1;
    deduped_11_1 := MorphismMatrix( alpha_1 );
    deduped_10_1 := Range( alpha_1 );
    deduped_9_1 := Source( alpha_1 );
    hoisted_8_1 := [ 1 .. Length( ObjectList( deduped_10_1 ) ) ];
    hoisted_7_1 := UnderlyingCategory( cat_1 );
    hoisted_6_1 := List( MorphismMatrix( beta_1 ), function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, UnderlyingQuiverAlgebraElement );
        end );
    hoisted_5_1 := List( deduped_11_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, UnderlyingQuiverAlgebraElement );
        end );
    hoisted_4_1 := List( deduped_11_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, Range );
        end );
    hoisted_3_1 := List( deduped_11_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, Source );
        end );
    return CreateCapCategoryMorphismWithAttributes( cat_1, deduped_9_1, deduped_10_1, MorphismMatrix, List( [ 1 .. Length( ObjectList( deduped_9_1 ) ) ], function ( i_2 )
              local hoisted_1_2, hoisted_2_2, hoisted_3_2, hoisted_4_2;
              hoisted_4_2 := hoisted_6_1[i_2];
              hoisted_3_2 := hoisted_5_1[i_2];
              hoisted_2_2 := hoisted_4_1[i_2];
              hoisted_1_2 := hoisted_3_1[i_2];
              return List( hoisted_8_1, function ( j_3 )
                      return CreateCapCategoryMorphismWithAttributes( hoisted_7_1, hoisted_1_2[j_3], hoisted_2_2[j_3], UnderlyingQuiverAlgebraElement, hoisted_3_2[j_3] + hoisted_4_2[j_3] );
                  end );
          end ) );
end
########
        
    , 100 );
    
    ##
    AddAdditiveInverseForMorphisms( cat,
        
########
function ( cat_1, alpha_1 )
    local hoisted_1_1, hoisted_2_1, hoisted_3_1, hoisted_4_1, hoisted_5_1, deduped_6_1, deduped_7_1, deduped_8_1;
    deduped_8_1 := MorphismMatrix( alpha_1 );
    deduped_7_1 := Range( alpha_1 );
    deduped_6_1 := Source( alpha_1 );
    hoisted_5_1 := [ 1 .. Length( ObjectList( deduped_7_1 ) ) ];
    hoisted_4_1 := UnderlyingCategory( cat_1 );
    hoisted_3_1 := List( deduped_8_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, function ( logic_new_func_x_3 )
                    return - UnderlyingQuiverAlgebraElement( logic_new_func_x_3 );
                end );
        end );
    hoisted_2_1 := List( deduped_8_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, Range );
        end );
    hoisted_1_1 := List( deduped_8_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, Source );
        end );
    return CreateCapCategoryMorphismWithAttributes( cat_1, deduped_6_1, deduped_7_1, MorphismMatrix, List( [ 1 .. Length( ObjectList( deduped_6_1 ) ) ], function ( i_2 )
              local hoisted_1_2, hoisted_2_2, hoisted_3_2;
              hoisted_3_2 := hoisted_3_1[i_2];
              hoisted_2_2 := hoisted_2_1[i_2];
              hoisted_1_2 := hoisted_1_1[i_2];
              return List( hoisted_5_1, function ( j_3 )
                      return CreateCapCategoryMorphismWithAttributes( hoisted_4_1, hoisted_1_2[j_3], hoisted_2_2[j_3], UnderlyingQuiverAlgebraElement, hoisted_3_2[j_3] );
                  end );
          end ) );
end
########
        
    , 100 );
    
    ##
    AddComponentOfMorphismFromDirectSum( cat,
        
########
function ( cat_1, alpha_1, S_1, i_1 )
    local deduped_1_1, deduped_2_1;
    deduped_2_1 := List( S_1, function ( s_2 )
            return Length( ObjectList( s_2 ) );
        end );
    deduped_1_1 := Sum( deduped_2_1{[ 1 .. i_1 - 1 ]} ) + 1;
    return CreateCapCategoryMorphismWithAttributes( cat_1, S_1[i_1], Range( alpha_1 ), MorphismMatrix, MorphismMatrix( alpha_1 ){[ deduped_1_1 .. deduped_1_1 - 1 + deduped_2_1[i_1] ]} );
end
########
        
    , 100 );
    
    ##
    AddComponentOfMorphismIntoDirectSum( cat,
        
########
function ( cat_1, alpha_1, S_1, i_1 )
    local hoisted_1_1, deduped_2_1, deduped_3_1;
    deduped_3_1 := List( S_1, function ( s_2 )
            return Length( ObjectList( s_2 ) );
        end );
    deduped_2_1 := Sum( deduped_3_1{[ 1 .. i_1 - 1 ]} ) + 1;
    hoisted_1_1 := [ deduped_2_1 .. deduped_2_1 - 1 + deduped_3_1[i_1] ];
    return CreateCapCategoryMorphismWithAttributes( cat_1, Source( alpha_1 ), S_1[i_1], MorphismMatrix, List( MorphismMatrix( alpha_1 ), function ( row_2 )
              return row_2{hoisted_1_1};
          end ) );
end
########
        
    , 100 );
    
    ##
    AddDirectSum( cat,
        
########
function ( cat_1, objects_1 )
    return CreateCapCategoryObjectWithAttributes( cat_1, ObjectList, Concatenation( List( objects_1, ObjectList ) ) );
end
########
        
    , 100 );
    
    ##
    AddDistinguishedObjectOfHomomorphismStructure( cat,
        
########
function ( cat_1 )
    return CreateCapCategoryObjectWithAttributes( RangeCategoryOfHomomorphismStructure( cat_1 ), RankOfObject, 1 );
end
########
        
    , 100 );
    
    ##
    AddHomomorphismStructureOnMorphismsWithGivenObjects( cat,
        
########
function ( cat_1, source_1, alpha_1, beta_1, range_1 )
    local deduped_2_1, hoisted_3_1, hoisted_5_1, hoisted_7_1, deduped_8_1, deduped_9_1, hoisted_10_1, hoisted_11_1, hoisted_12_1, hoisted_13_1, deduped_14_1, deduped_15_1, hoisted_17_1, hoisted_18_1, hoisted_19_1, hoisted_20_1, deduped_22_1, deduped_23_1, deduped_24_1, deduped_25_1, deduped_26_1, deduped_27_1, deduped_28_1, deduped_29_1, deduped_30_1, deduped_31_1, deduped_32_1, deduped_33_1;
    deduped_33_1 := MorphismMatrix( beta_1 );
    deduped_32_1 := MorphismMatrix( alpha_1 );
    deduped_31_1 := UnderlyingCategory( cat_1 );
    deduped_30_1 := RankOfObject( range_1 );
    deduped_29_1 := RangeCategoryOfHomomorphismStructure( cat_1 );
    deduped_28_1 := ObjectList( Range( beta_1 ) );
    deduped_27_1 := ObjectList( Source( alpha_1 ) );
    deduped_26_1 := ObjectList( Source( beta_1 ) );
    deduped_25_1 := BasisPathsByVertexIndex( deduped_31_1 );
    deduped_24_1 := ObjectList( Range( alpha_1 ) );
    deduped_23_1 := [ 1 .. Length( deduped_27_1 ) ];
    deduped_22_1 := [ 1 .. Length( deduped_26_1 ) ];
    hoisted_20_1 := HomStructureOnBasisPaths( deduped_31_1 );
    hoisted_18_1 := List( deduped_33_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, UnderlyingQuiverAlgebraElement );
        end );
    deduped_15_1 := List( deduped_33_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, function ( logic_new_func_x_3 )
                    return VertexIndex( UnderlyingVertex( Range( logic_new_func_x_3 ) ) );
                end );
        end );
    deduped_14_1 := List( deduped_33_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, function ( logic_new_func_x_3 )
                    return VertexIndex( UnderlyingVertex( Source( logic_new_func_x_3 ) ) );
                end );
        end );
    deduped_8_1 := [ 1 .. Length( deduped_28_1 ) ];
    hoisted_19_1 := ListWithKeys( deduped_22_1, function ( key_2, s_2 )
            local hoisted_1_2, hoisted_2_2, hoisted_3_2;
            hoisted_3_2 := hoisted_18_1[s_2];
            hoisted_2_2 := deduped_15_1[s_2];
            hoisted_1_2 := deduped_14_1[s_2];
            return ListWithKeys( deduped_8_1, function ( key_3, t_3 )
                    return CoefficientsOfPaths( deduped_25_1[hoisted_1_2[t_3]][hoisted_2_2[t_3]], hoisted_3_2[t_3] );
                end );
        end );
    hoisted_17_1 := List( deduped_32_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, UnderlyingQuiverAlgebraElement );
        end );
    hoisted_13_1 := List( deduped_32_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, function ( logic_new_func_x_3 )
                    return VertexIndex( UnderlyingVertex( Range( logic_new_func_x_3 ) ) );
                end );
        end );
    hoisted_12_1 := List( deduped_32_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, function ( logic_new_func_x_3 )
                    return VertexIndex( UnderlyingVertex( Source( logic_new_func_x_3 ) ) );
                end );
        end );
    hoisted_11_1 := List( deduped_33_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, function ( logic_new_func_x_3 )
                    return IsZero( UnderlyingQuiverAlgebraElement( logic_new_func_x_3 ) );
                end );
        end );
    hoisted_7_1 := List( deduped_28_1, function ( logic_new_func_x_2 )
            return VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    deduped_2_1 := List( deduped_25_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, Length );
        end );
    deduped_9_1 := List( deduped_23_1, function ( i_2 )
            local hoisted_1_2;
            hoisted_1_2 := deduped_2_1[CAP_JIT_INCOMPLETE_LOGIC( VertexIndex( UnderlyingVertex( CAP_JIT_INCOMPLETE_LOGIC( deduped_27_1[i_2] ) ) ) )];
            return List( deduped_8_1, function ( t_3 )
                    return hoisted_1_2[hoisted_7_1[t_3]];
                end );
        end );
    hoisted_10_1 := List( deduped_23_1, function ( i_2 )
            local hoisted_1_2;
            hoisted_1_2 := deduped_9_1[i_2];
            return Sum( List( deduped_8_1, function ( t_3 )
                      return hoisted_1_2[t_3];
                  end ) );
        end );
    hoisted_5_1 := List( deduped_32_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, function ( logic_new_func_x_3 )
                    return IsZero( UnderlyingQuiverAlgebraElement( logic_new_func_x_3 ) );
                end );
        end );
    hoisted_3_1 := List( deduped_26_1, function ( logic_new_func_x_2 )
            return VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    return CreateCapCategoryMorphismWithAttributes( deduped_29_1, source_1, range_1, UnderlyingMatrix, HomalgMatrixListList( UnionOfRowsListList( deduped_30_1, List( [ 1 .. Length( deduped_24_1 ) ], function ( j_2 )
                  local hoisted_1_2, deduped_2_2, hoisted_3_2;
                  hoisted_1_2 := deduped_2_1[CAP_JIT_INCOMPLETE_LOGIC( VertexIndex( UnderlyingVertex( CAP_JIT_INCOMPLETE_LOGIC( deduped_24_1[CAP_JIT_INCOMPLETE_LOGIC( j_2 )] ) ) ) )];
                  deduped_2_2 := CAP_JIT_INCOMPLETE_LOGIC( List( deduped_22_1, function ( s_3 )
                            return hoisted_1_2[hoisted_3_1[s_3]];
                        end ) );
                  hoisted_3_2 := Sum( deduped_22_1, function ( s_3 )
                          return deduped_2_2[s_3];
                      end );
                  return UnionOfColumnsListList( Sum( List( deduped_22_1, function ( s_3 )
                              return deduped_2_2[s_3];
                          end ) ), List( deduped_23_1, function ( i_3 )
                            local deduped_1_3, hoisted_2_3, hoisted_3_3, hoisted_4_3, hoisted_6_3, deduped_7_3, deduped_8_3, deduped_9_3;
                            deduped_9_3 := hoisted_10_1[i_3];
                            if hoisted_5_1[i_3][j_2] then
                                return NullMatImmutable( hoisted_3_2, deduped_9_3 );
                            else
                                deduped_8_3 := hoisted_13_1[i_3][j_2];
                                deduped_7_3 := hoisted_12_1[i_3][j_2];
                                hoisted_6_3 := [ 1 .. deduped_2_1[deduped_7_3][deduped_8_3] ];
                                hoisted_4_3 := hoisted_20_1[deduped_8_3];
                                hoisted_3_3 := CoefficientsOfPaths( deduped_25_1[deduped_7_3][deduped_8_3], hoisted_17_1[i_3][j_2] );
                                deduped_1_3 := deduped_9_1[i_3];
                                hoisted_2_3 := Sum( deduped_8_1, function ( t_4 )
                                        return deduped_1_3[t_4];
                                    end );
                                return UnionOfRowsListList( deduped_9_3, ListWithKeys( deduped_22_1, function ( key_4, s_4 )
                                          local hoisted_1_4, hoisted_3_4, hoisted_4_4, hoisted_5_4, deduped_6_4;
                                          deduped_6_4 := deduped_2_2[s_4];
                                          if deduped_6_4 = 0 then
                                              return NullMatImmutable( deduped_6_4, hoisted_2_3 );
                                          else
                                              hoisted_5_4 := hoisted_19_1[key_4];
                                              hoisted_4_4 := deduped_15_1[s_4];
                                              hoisted_3_4 := deduped_14_1[s_4];
                                              hoisted_1_4 := hoisted_11_1[s_4];
                                              return UnionOfColumnsListList( deduped_6_4, ListWithKeys( deduped_8_1, function ( key_5, t_5 )
                                                        local hoisted_1_5, hoisted_2_5, hoisted_3_5, deduped_4_5, deduped_5_5, deduped_6_5;
                                                        deduped_4_5 := deduped_1_3[t_5];
                                                        if hoisted_1_4[t_5] or deduped_4_5 = 0 then
                                                            return NullMatImmutable( deduped_6_4, deduped_4_5 );
                                                        else
                                                            deduped_6_5 := hoisted_4_4[t_5];
                                                            deduped_5_5 := hoisted_3_4[t_5];
                                                            hoisted_3_5 := [ 1 .. deduped_2_1[deduped_5_5][deduped_6_5] ];
                                                            hoisted_2_5 := hoisted_4_3[deduped_5_5][deduped_7_3][deduped_6_5];
                                                            hoisted_1_5 := hoisted_5_4[key_5];
                                                            return Sum( hoisted_6_3, function ( p_6 )
                                                                    local hoisted_1_6, hoisted_2_6;
                                                                    hoisted_2_6 := hoisted_2_5[p_6];
                                                                    hoisted_1_6 := hoisted_3_3[p_6];
                                                                    return Sum( hoisted_3_5, function ( q_7 )
                                                                            return hoisted_1_6 * hoisted_1_5[q_7] * hoisted_2_6[q_7];
                                                                        end );
                                                                end );
                                                        fi;
                                                        return;
                                                    end ) );
                                          fi;
                                          return;
                                      end ) );
                            fi;
                            return;
                        end ) );
              end ) ), RankOfObject( source_1 ), deduped_30_1, UnderlyingRing( deduped_29_1 ) ) );
end
########
        
    , 100 );
    
    ##
    AddHomomorphismStructureOnObjects( cat,
        
########
function ( cat_1, arg2_1, arg3_1 )
    local hoisted_3_1, hoisted_4_1;
    hoisted_4_1 := ObjectList( arg3_1 );
    hoisted_3_1 := List( BasisPathsByVertexIndex( UnderlyingCategory( cat_1 ) ), function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, Length );
        end );
    return CreateCapCategoryObjectWithAttributes( RangeCategoryOfHomomorphismStructure( cat_1 ), RankOfObject, Sum( Concatenation( List( ObjectList( arg2_1 ), function ( obj_i_2 )
                  local hoisted_1_2;
                  hoisted_1_2 := hoisted_3_1[VertexIndex( UnderlyingVertex( obj_i_2 ) )];
                  return List( hoisted_4_1, function ( obj_j_3 )
                          return hoisted_1_2[VertexIndex( UnderlyingVertex( obj_j_3 ) )];
                      end );
              end ) ) ) );
end
########
        
    , 100 );
    
    ##
    AddIdentityMorphism( cat,
        
########
function ( cat_1, a_1 )
    local hoisted_4_1, deduped_6_1, deduped_7_1, deduped_8_1, deduped_9_1;
    deduped_9_1 := UnderlyingCategory( cat_1 );
    deduped_8_1 := ObjectList( a_1 );
    deduped_7_1 := UnderlyingQuiverAlgebra( deduped_9_1 );
    deduped_6_1 := [ 1 .. Length( deduped_8_1 ) ];
    hoisted_4_1 := ZeroImmutable( deduped_7_1 );
    return CreateCapCategoryMorphismWithAttributes( cat_1, a_1, a_1, MorphismMatrix, List( deduped_6_1, function ( i_2 )
              local hoisted_1_2, deduped_3_2;
              deduped_3_2 := deduped_8_1[i_2];
              hoisted_1_2 := CreateCapCategoryMorphismWithAttributes( deduped_9_1, deduped_3_2, deduped_3_2, UnderlyingQuiverAlgebraElement, PathAsAlgebraElement( deduped_7_1, CAP_JIT_INCOMPLETE_LOGIC( QuiverVertexAsIdentityPath( UnderlyingVertex( CAP_JIT_INCOMPLETE_LOGIC( deduped_3_2 ) ) ) ) ) );
              return List( deduped_6_1, function ( j_3 )
                      if i_2 = j_3 then
                          return hoisted_1_2;
                      else
                          return CreateCapCategoryMorphismWithAttributes( deduped_9_1, deduped_3_2, deduped_8_1[j_3], UnderlyingQuiverAlgebraElement, hoisted_4_1 );
                      fi;
                      return;
                  end );
          end ) );
end
########
        
    , 100 );
    
    ##
    AddInterpretMorphismAsMorphismFromDistinguishedObjectToHomomorphismStructureWithGivenObjects( cat,
        
########
function ( cat_1, source_1, alpha_1, range_1 )
    local hoisted_1_1, hoisted_2_1, hoisted_3_1, hoisted_5_1, hoisted_6_1, deduped_8_1, deduped_9_1, deduped_10_1, deduped_11_1;
    deduped_11_1 := MorphismMatrix( alpha_1 );
    deduped_10_1 := RankOfObject( source_1 );
    deduped_9_1 := RangeCategoryOfHomomorphismStructure( cat_1 );
    deduped_8_1 := BasisPathsByVertexIndex( UnderlyingCategory( cat_1 ) );
    hoisted_6_1 := [ 1 .. Length( ObjectList( Range( alpha_1 ) ) ) ];
    hoisted_5_1 := List( deduped_11_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, UnderlyingQuiverAlgebraElement );
        end );
    hoisted_3_1 := List( deduped_11_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, function ( logic_new_func_x_3 )
                    return VertexIndex( UnderlyingVertex( Range( logic_new_func_x_3 ) ) );
                end );
        end );
    hoisted_2_1 := List( deduped_8_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, Length );
        end );
    hoisted_1_1 := List( deduped_11_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, function ( logic_new_func_x_3 )
                    return VertexIndex( UnderlyingVertex( Source( logic_new_func_x_3 ) ) );
                end );
        end );
    return CreateCapCategoryMorphismWithAttributes( deduped_9_1, source_1, range_1, UnderlyingMatrix, HomalgMatrixListList( UnionOfColumnsListList( deduped_10_1, List( [ 1 .. Length( ObjectList( Source( alpha_1 ) ) ) ], function ( j_2 )
                  local hoisted_1_2, hoisted_2_2, hoisted_3_2;
                  hoisted_3_2 := hoisted_5_1[j_2];
                  hoisted_2_2 := hoisted_3_1[j_2];
                  hoisted_1_2 := hoisted_1_1[j_2];
                  return UnionOfColumnsListList( deduped_10_1, List( hoisted_6_1, function ( s_3 )
                            local deduped_1_3, deduped_2_3, deduped_3_3;
                            deduped_3_3 := hoisted_2_2[s_3];
                            deduped_2_3 := hoisted_1_2[s_3];
                            deduped_1_3 := hoisted_2_1[deduped_2_3][deduped_3_3];
                            if deduped_1_3 = 0 then
                                return NullMatImmutable( 1, deduped_1_3 );
                            else
                                return [ CoefficientsOfPaths( deduped_8_1[deduped_2_3][deduped_3_3], hoisted_3_2[s_3] ) ];
                            fi;
                            return;
                        end ) );
              end ) ), deduped_10_1, RankOfObject( range_1 ), UnderlyingRing( deduped_9_1 ) ) );
end
########
        
    , 100 );
    
    ##
    AddInterpretMorphismFromDistinguishedObjectToHomomorphismStructureAsMorphism( cat,
        
########
function ( cat_1, source_1, range_1, alpha_1 )
    local hoisted_3_1, deduped_5_1, hoisted_6_1, hoisted_8_1, hoisted_9_1, hoisted_11_1, deduped_12_1, deduped_13_1, deduped_14_1, deduped_15_1, deduped_16_1;
    deduped_16_1 := UnderlyingCategory( cat_1 );
    deduped_15_1 := ObjectList( range_1 );
    deduped_14_1 := ObjectList( source_1 );
    deduped_13_1 := Length( deduped_15_1 );
    deduped_12_1 := BasisPathsByVertexIndex( deduped_16_1 );
    hoisted_11_1 := [ 1 .. deduped_13_1 ];
    hoisted_9_1 := UnderlyingQuiverAlgebra( deduped_16_1 );
    hoisted_8_1 := List( deduped_15_1, function ( logic_new_func_x_2 )
            return VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    hoisted_6_1 := CAP_JIT_INCOMPLETE_LOGIC( EntriesOfHomalgMatrixAsListList( UnderlyingMatrix( alpha_1 ) )[1] );
    hoisted_3_1 := List( deduped_12_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, Length );
        end );
    deduped_5_1 := Concatenation( List( deduped_14_1, function ( obj_i_2 )
              local hoisted_1_2;
              hoisted_1_2 := hoisted_3_1[VertexIndex( UnderlyingVertex( obj_i_2 ) )];
              return List( deduped_15_1, function ( obj_j_3 )
                      return hoisted_1_2[VertexIndex( UnderlyingVertex( obj_j_3 ) )];
                  end );
          end ) );
    return CreateCapCategoryMorphismWithAttributes( cat_1, source_1, range_1, MorphismMatrix, List( [ 1 .. Length( deduped_14_1 ) ], function ( i_2 )
              local hoisted_1_2, hoisted_2_2, deduped_4_2;
              deduped_4_2 := deduped_14_1[i_2];
              hoisted_2_2 := deduped_12_1[CAP_JIT_INCOMPLETE_LOGIC( VertexIndex( UnderlyingVertex( CAP_JIT_INCOMPLETE_LOGIC( deduped_4_2 ) ) ) )];
              hoisted_1_2 := deduped_13_1 * (CAP_JIT_INCOMPLETE_LOGIC( i_2 ) - 1);
              return List( hoisted_11_1, function ( j_3 )
                      local deduped_1_3, deduped_2_3;
                      deduped_2_3 := hoisted_1_2 + CAP_JIT_INCOMPLETE_LOGIC( j_3 );
                      deduped_1_3 := Sum( deduped_5_1{[ 1 .. deduped_2_3 - 1 ]} ) + 1;
                      return CreateCapCategoryMorphismWithAttributes( deduped_16_1, deduped_4_2, deduped_15_1[j_3], UnderlyingQuiverAlgebraElement, QuiverAlgebraElement( hoisted_9_1, CAP_JIT_INCOMPLETE_LOGIC( hoisted_6_1{[ deduped_1_3 .. deduped_1_3 - 1 + deduped_5_1[deduped_2_3] ]} ), hoisted_2_2[hoisted_8_1[j_3]] ) );
                  end );
          end ) );
end
########
        
    , 100 );
    
    ##
    AddIsCongruentForMorphisms( cat,
        
########
function ( cat_1, arg2_1, arg3_1 )
    local hoisted_3_1, hoisted_4_1, hoisted_5_1, deduped_6_1, deduped_7_1;
    deduped_7_1 := Length( ObjectList( Range( arg2_1 ) ) );
    deduped_6_1 := Length( ObjectList( Source( arg2_1 ) ) );
    if deduped_6_1 <> Length( ObjectList( Source( arg3_1 ) ) ) then
        return false;
    elif deduped_7_1 <> Length( ObjectList( Range( arg3_1 ) ) ) then
        return false;
    elif deduped_6_1 = 0 or deduped_7_1 = 0 then
        return true;
    else
        hoisted_5_1 := [ 1 .. deduped_7_1 ];
        hoisted_4_1 := List( MorphismMatrix( arg3_1 ), function ( logic_new_func_list_2 )
                return List( logic_new_func_list_2, UnderlyingQuiverAlgebraElement );
            end );
        hoisted_3_1 := List( MorphismMatrix( arg2_1 ), function ( logic_new_func_list_2 )
                return List( logic_new_func_list_2, UnderlyingQuiverAlgebraElement );
            end );
        return ForAll( [ 1 .. deduped_6_1 ], function ( i_2 )
                local hoisted_1_2, hoisted_2_2;
                hoisted_2_2 := hoisted_4_1[i_2];
                hoisted_1_2 := hoisted_3_1[i_2];
                return ForAll( hoisted_5_1, function ( j_3 )
                        return hoisted_1_2[j_3] = hoisted_2_2[j_3];
                    end );
            end );
    fi;
    return;
end
########
        
    , 100 );
    
    ##
    AddIsEqualForMorphisms( cat,
        
########
function ( cat_1, arg2_1, arg3_1 )
    local hoisted_3_1, hoisted_4_1, hoisted_5_1, deduped_6_1, deduped_7_1;
    deduped_7_1 := Length( ObjectList( Range( arg2_1 ) ) );
    deduped_6_1 := Length( ObjectList( Source( arg2_1 ) ) );
    if deduped_6_1 <> Length( ObjectList( Source( arg3_1 ) ) ) then
        return false;
    elif deduped_7_1 <> Length( ObjectList( Range( arg3_1 ) ) ) then
        return false;
    elif deduped_6_1 = 0 or deduped_7_1 = 0 then
        return true;
    else
        hoisted_5_1 := [ 1 .. deduped_7_1 ];
        hoisted_4_1 := List( MorphismMatrix( arg3_1 ), function ( logic_new_func_list_2 )
                return List( logic_new_func_list_2, UnderlyingQuiverAlgebraElement );
            end );
        hoisted_3_1 := List( MorphismMatrix( arg2_1 ), function ( logic_new_func_list_2 )
                return List( logic_new_func_list_2, UnderlyingQuiverAlgebraElement );
            end );
        return ForAll( [ 1 .. deduped_6_1 ], function ( i_2 )
                local hoisted_1_2, hoisted_2_2;
                hoisted_2_2 := hoisted_4_1[i_2];
                hoisted_1_2 := hoisted_3_1[i_2];
                return ForAll( hoisted_5_1, function ( j_3 )
                        return hoisted_1_2[j_3] = hoisted_2_2[j_3];
                    end );
            end );
    fi;
    return;
end
########
        
    , 100 );
    
    ##
    AddIsEqualForObjects( cat,
        
########
function ( cat_1, arg2_1, arg3_1 )
    local hoisted_4_1, deduped_5_1, deduped_6_1, deduped_7_1;
    deduped_7_1 := ObjectList( arg3_1 );
    deduped_6_1 := ObjectList( arg2_1 );
    deduped_5_1 := Length( deduped_6_1 );
    if deduped_5_1 <> Length( deduped_7_1 ) then
        return false;
    else
        hoisted_4_1 := List( deduped_7_1, UnderlyingVertex );
        return ForAll( [ 1 .. deduped_5_1 ], function ( i_2 )
                return CAP_JIT_INCOMPLETE_LOGIC( UnderlyingVertex( CAP_JIT_INCOMPLETE_LOGIC( deduped_6_1[i_2] ) ) ) = hoisted_4_1[i_2];
            end );
    fi;
    return;
end
########
        
    , 100 );
    
    ##
    AddIsWellDefinedForMorphisms( cat,
        
########
function ( cat_1, arg2_1 )
    local hoisted_1_1, hoisted_2_1, hoisted_4_1, hoisted_5_1, hoisted_6_1, hoisted_7_1, deduped_8_1, deduped_9_1, deduped_10_1, hoisted_12_1, deduped_13_1, deduped_14_1, deduped_15_1, deduped_16_1, deduped_17_1, deduped_18_1, deduped_19_1;
    deduped_19_1 := UnderlyingCategory( cat_1 );
    deduped_18_1 := MorphismMatrix( arg2_1 );
    deduped_17_1 := ObjectList( Range( arg2_1 ) );
    deduped_16_1 := ObjectList( Source( arg2_1 ) );
    deduped_15_1 := Length( deduped_17_1 );
    deduped_14_1 := Length( deduped_16_1 );
    deduped_13_1 := [ 1 .. deduped_14_1 ];
    hoisted_12_1 := List( deduped_17_1, UnderlyingVertex );
    deduped_10_1 := [ 1 .. deduped_15_1 ];
    deduped_9_1 := List( deduped_18_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, function ( logic_new_func_x_3 )
                    return UnderlyingVertex( Range( logic_new_func_x_3 ) );
                end );
        end );
    deduped_8_1 := List( deduped_18_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, function ( logic_new_func_x_3 )
                    return UnderlyingVertex( Source( logic_new_func_x_3 ) );
                end );
        end );
    hoisted_7_1 := List( deduped_18_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, function ( logic_new_func_x_3 )
                    return Paths( UnderlyingQuiverAlgebraElement( logic_new_func_x_3 ) );
                end );
        end );
    hoisted_6_1 := List( deduped_18_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, function ( logic_new_func_x_3 )
                    return IsZero( UnderlyingQuiverAlgebraElement( logic_new_func_x_3 ) );
                end );
        end );
    hoisted_5_1 := UnderlyingQuiverAlgebra( deduped_19_1 );
    hoisted_4_1 := List( deduped_18_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, function ( logic_new_func_x_3 )
                    return AlgebraOfElement( UnderlyingQuiverAlgebraElement( logic_new_func_x_3 ) );
                end );
        end );
    hoisted_2_1 := List( deduped_18_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, CapCategory );
        end );
    hoisted_1_1 := List( deduped_18_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, IsCapCategoryMorphism );
        end );
    if IsMatrixObj( deduped_18_1 ) and not (deduped_14_1 = NumberRows( deduped_18_1 ) and deduped_15_1 = NumberColumns( deduped_18_1 )) then
        return false;
    elif not ForAll( deduped_13_1, function ( i_2 )
                 local hoisted_1_2, hoisted_2_2, hoisted_3_2, hoisted_4_2, hoisted_5_2, hoisted_6_2, hoisted_7_2;
                 hoisted_7_2 := deduped_9_1[i_2];
                 hoisted_6_2 := deduped_8_1[i_2];
                 hoisted_5_2 := hoisted_7_1[i_2];
                 hoisted_4_2 := hoisted_6_1[i_2];
                 hoisted_3_2 := hoisted_4_1[i_2];
                 hoisted_2_2 := hoisted_2_1[i_2];
                 hoisted_1_2 := hoisted_1_1[i_2];
                 return ForAll( deduped_10_1, function ( j_3 )
                         local hoisted_1_3, hoisted_2_3, deduped_3_3;
                         deduped_3_3 := hoisted_5_2[j_3];
                         hoisted_2_3 := hoisted_7_2[j_3];
                         hoisted_1_3 := hoisted_6_2[j_3];
                         return (hoisted_1_2[j_3] and IS_IDENTICAL_OBJ( deduped_19_1, hoisted_2_2[j_3] ) and IdFunc( function (  )
                                     if not hoisted_3_2[j_3] = hoisted_5_1 then
                                         return false;
                                     elif hoisted_4_2[j_3] then
                                         return true;
                                     elif not ForAll( deduped_3_3, function ( p_5 )
                                                  return hoisted_1_3 = Source( p_5 );
                                              end ) then
                                         return false;
                                     elif not ForAll( deduped_3_3, function ( p_5 )
                                                  return hoisted_2_3 = Target( p_5 );
                                              end ) then
                                         return false;
                                     else
                                         return true;
                                     fi;
                                     return;
                                 end )(  ));
                     end );
             end ) then
        return false;
    elif not ForAll( deduped_13_1, function ( i_2 )
                 local hoisted_1_2, hoisted_2_2, hoisted_3_2;
                 hoisted_3_2 := deduped_9_1[i_2];
                 hoisted_2_2 := CAP_JIT_INCOMPLETE_LOGIC( UnderlyingVertex( CAP_JIT_INCOMPLETE_LOGIC( deduped_16_1[i_2] ) ) );
                 hoisted_1_2 := deduped_8_1[i_2];
                 return ForAll( deduped_10_1, function ( j_3 )
                         return (hoisted_1_2[j_3] = hoisted_2_2 and hoisted_3_2[j_3] = hoisted_12_1[j_3]);
                     end );
             end ) then
        return false;
    else
        return true;
    fi;
    return;
end
########
        
    , 100 );
    
    ##
    AddIsWellDefinedForObjects( cat,
        
########
function ( cat_1, arg2_1 )
    local hoisted_2_1, deduped_3_1;
    deduped_3_1 := UnderlyingCategory( cat_1 );
    hoisted_2_1 := UnderlyingQuiver( deduped_3_1 );
    if not ForAll( ObjectList( arg2_1 ), function ( obj_2 )
                 local deduped_1_2;
                 deduped_1_2 := UnderlyingVertex( obj_2 );
                 return (IS_IDENTICAL_OBJ( deduped_3_1, CapCategory( obj_2 ) ) and (IsQuiverVertex( deduped_1_2 ) and QuiverOfPath( deduped_1_2 ) = hoisted_2_1));
             end ) then
        return false;
    else
        return true;
    fi;
    return;
end
########
        
    , 100 );
    
    ##
    AddIsZeroForMorphisms( cat,
        
########
function ( cat_1, arg2_1 )
    local hoisted_1_1, hoisted_2_1;
    hoisted_2_1 := [ 1 .. Length( ObjectList( Range( arg2_1 ) ) ) ];
    hoisted_1_1 := List( MorphismMatrix( arg2_1 ), function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, function ( logic_new_func_x_3 )
                    return IsZero( UnderlyingQuiverAlgebraElement( logic_new_func_x_3 ) );
                end );
        end );
    return ForAll( [ 1 .. Length( ObjectList( Source( arg2_1 ) ) ) ], function ( i_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_1_1[i_2];
            return ForAll( hoisted_2_1, function ( j_3 )
                    return hoisted_1_2[j_3];
                end );
        end );
end
########
        
    , 100 );
    
    ##
    AddMorphismConstructor( cat,
        
########
function ( cat_1, arg2_1, arg3_1, arg4_1 )
    return CreateCapCategoryMorphismWithAttributes( cat_1, arg2_1, arg4_1, MorphismMatrix, arg3_1 );
end
########
        
    , 100 );
    
    ##
    AddMorphismDatum( cat,
        
########
function ( cat_1, arg2_1 )
    return MorphismMatrix( arg2_1 );
end
########
        
    , 100 );
    
    ##
    AddMultiplyWithElementOfCommutativeRingForMorphisms( cat,
        
########
function ( cat_1, r_1, alpha_1 )
    local hoisted_1_1, hoisted_2_1, hoisted_3_1, hoisted_4_1, hoisted_5_1, deduped_6_1, deduped_7_1, deduped_8_1;
    deduped_8_1 := MorphismMatrix( alpha_1 );
    deduped_7_1 := Range( alpha_1 );
    deduped_6_1 := Source( alpha_1 );
    hoisted_5_1 := [ 1 .. Length( ObjectList( deduped_7_1 ) ) ];
    hoisted_4_1 := UnderlyingCategory( cat_1 );
    hoisted_3_1 := List( deduped_8_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, UnderlyingQuiverAlgebraElement );
        end );
    hoisted_2_1 := List( deduped_8_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, Range );
        end );
    hoisted_1_1 := List( deduped_8_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, Source );
        end );
    return CreateCapCategoryMorphismWithAttributes( cat_1, deduped_6_1, deduped_7_1, MorphismMatrix, List( [ 1 .. Length( ObjectList( deduped_6_1 ) ) ], function ( i_2 )
              local hoisted_1_2, hoisted_2_2, hoisted_3_2;
              hoisted_3_2 := hoisted_3_1[i_2];
              hoisted_2_2 := hoisted_2_1[i_2];
              hoisted_1_2 := hoisted_1_1[i_2];
              return List( hoisted_5_1, function ( j_3 )
                      return CreateCapCategoryMorphismWithAttributes( hoisted_4_1, hoisted_1_2[j_3], hoisted_2_2[j_3], UnderlyingQuiverAlgebraElement, r_1 * hoisted_3_2[j_3] );
                  end );
          end ) );
end
########
        
    , 100 );
    
    ##
    AddObjectConstructor( cat,
        
########
function ( cat_1, arg2_1 )
    return CreateCapCategoryObjectWithAttributes( cat_1, ObjectList, arg2_1 );
end
########
        
    , 100 );
    
    ##
    AddObjectDatum( cat,
        
########
function ( cat_1, arg2_1 )
    return ObjectList( arg2_1 );
end
########
        
    , 100 );
    
    ##
    AddPreCompose( cat,
        
########
function ( cat_1, alpha_1, beta_1 )
    local hoisted_5_1, hoisted_6_1, hoisted_7_1, hoisted_8_1, hoisted_10_1, deduped_11_1, deduped_12_1, deduped_13_1, deduped_14_1, deduped_15_1;
    deduped_15_1 := UnderlyingCategory( cat_1 );
    deduped_14_1 := Range( beta_1 );
    deduped_13_1 := Source( alpha_1 );
    deduped_12_1 := ObjectList( deduped_14_1 );
    deduped_11_1 := ObjectList( deduped_13_1 );
    hoisted_10_1 := [ 1 .. Length( deduped_12_1 ) ];
    hoisted_8_1 := ZeroImmutable( UnderlyingQuiverAlgebra( deduped_15_1 ) );
    hoisted_7_1 := [ 1 .. Length( ObjectList( Range( alpha_1 ) ) ) ];
    hoisted_6_1 := List( MorphismMatrix( beta_1 ), function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, UnderlyingQuiverAlgebraElement );
        end );
    hoisted_5_1 := List( MorphismMatrix( alpha_1 ), function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, UnderlyingQuiverAlgebraElement );
        end );
    return CreateCapCategoryMorphismWithAttributes( cat_1, deduped_13_1, deduped_14_1, MorphismMatrix, List( [ 1 .. Length( deduped_11_1 ) ], function ( i_2 )
              local hoisted_1_2, hoisted_2_2;
              hoisted_2_2 := deduped_11_1[i_2];
              hoisted_1_2 := hoisted_5_1[i_2];
              return List( hoisted_10_1, function ( j_3 )
                      return CreateCapCategoryMorphismWithAttributes( deduped_15_1, hoisted_2_2, deduped_12_1[j_3], UnderlyingQuiverAlgebraElement, Iterated( List( hoisted_7_1, function ( k_4 )
                                  return hoisted_1_2[k_4] * hoisted_6_1[k_4][j_3];
                              end ), function ( alpha_4, beta_4 )
                                return alpha_4 + beta_4;
                            end, hoisted_8_1 ) );
                  end );
          end ) );
end
########
        
    , 100 );
    
    ##
    AddUniversalMorphismFromDirectSumWithGivenDirectSum( cat,
        
########
function ( cat_1, objects_1, T_1, tau_1, P_1 )
    return CreateCapCategoryMorphismWithAttributes( cat_1, P_1, T_1, MorphismMatrix, UnionOfRowsListList( Length( ObjectList( T_1 ) ), List( tau_1, MorphismMatrix ) ) );
end
########
        
    , 100 );
    
    ##
    AddUniversalMorphismIntoDirectSumWithGivenDirectSum( cat,
        
########
function ( cat_1, objects_1, T_1, tau_1, P_1 )
    return CreateCapCategoryMorphismWithAttributes( cat_1, T_1, P_1, MorphismMatrix, UnionOfColumnsListList( Length( ObjectList( T_1 ) ), List( tau_1, MorphismMatrix ) ) );
end
########
        
    , 100 );
    
    ##
    AddZeroMorphism( cat,
        
########
function ( cat_1, a_1, b_1 )
    local hoisted_4_1, hoisted_5_1, deduped_6_1, deduped_7_1, deduped_8_1;
    deduped_8_1 := UnderlyingCategory( cat_1 );
    deduped_7_1 := ObjectList( b_1 );
    deduped_6_1 := ObjectList( a_1 );
    hoisted_5_1 := [ 1 .. Length( deduped_7_1 ) ];
    hoisted_4_1 := ZeroImmutable( UnderlyingQuiverAlgebra( deduped_8_1 ) );
    return CreateCapCategoryMorphismWithAttributes( cat_1, a_1, b_1, MorphismMatrix, List( [ 1 .. Length( deduped_6_1 ) ], function ( i_2 )
              local hoisted_1_2;
              hoisted_1_2 := deduped_6_1[i_2];
              return List( hoisted_5_1, function ( j_3 )
                      return CreateCapCategoryMorphismWithAttributes( deduped_8_1, hoisted_1_2, deduped_7_1[j_3], UnderlyingQuiverAlgebraElement, hoisted_4_1 );
                  end );
          end ) );
end
########
        
    , 100 );
    
    ##
    AddZeroObject( cat,
        
########
function ( cat_1 )
    return CreateCapCategoryObjectWithAttributes( cat_1, ObjectList, [  ] );
end
########
        
    , 100 );
    
    if IsBound( cat!.precompiled_functions_added ) then
        
        # COVERAGE_IGNORE_NEXT_LINE
        Error( "precompiled functions have already been added before" );
        
    fi;
    
    cat!.precompiled_functions_added := true;
    
end );

BindGlobal( "AdditiveClosureOfAlgebroidOfFiniteDimensionalQuiverAlgebraOfRightQuiverOverZPrecompiled", function ( Rq )
  local category_constructor, cat;
    
    category_constructor :=
        
        
        function ( Rq )
    return AdditiveClosure( Algebroid( Rq, true : FinalizeCategory := true ) );
end;
        
        
    
    cat := category_constructor( Rq : FinalizeCategory := false, no_precompiled_code := true );
    
    ADD_FUNCTIONS_FOR_AdditiveClosureOfAlgebroidOfFiniteDimensionalQuiverAlgebraOfRightQuiverOverZPrecompiled( cat );
    
    Finalize( cat );
    
    return cat;
    
end );
